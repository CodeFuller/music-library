<Window x:Class="CF.MusicLibrary.AlbumPreprocessor.Views.EditAlbumsDetailsWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d"
        Title="Edit Albums Details" Width="1425" Height="400">
    <Grid>
        <DataGrid x:Name="ContentDataGrid" HorizontalAlignment="Left" Margin="10,10,0,0" Width="1410" Height="300" VerticalAlignment="Top"
                  AutoGenerateColumns="False" ItemsSource="{Binding Albums}">
            <DataGrid.ColumnHeaderStyle>
                <Style TargetType="{x:Type DataGridColumnHeader}">
                    <Setter Property="FontWeight"  Value="Bold" />
                    <Setter Property="HorizontalContentAlignment" Value="Center" />
                </Style>
            </DataGrid.ColumnHeaderStyle>
            <DataGrid.Columns>
                <DataGridTextColumn Width="250" Header="Source Dir"
                                    IsReadOnly="True" Binding="{Binding PathWithinWorkshopStorage}" />
                <DataGridTextColumn Width="150" Header="Type"
                                    IsReadOnly="True" Binding="{Binding AlbumTypeTitle}">
                    <DataGridTextColumn.CellStyle>
                        <Style TargetType="DataGridCell">
                            <Setter Property="TextBlock.TextAlignment" Value="Center"/>
                        </Style>
                    </DataGridTextColumn.CellStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Width="250" Header="Artist" Binding="{Binding Artist}">
                    <DataGridTextColumn.CellStyle>
                        <Style TargetType="DataGridCell">
                            <Setter Property="IsEnabled" Value="{Binding ArtistIsEditable}" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ArtistIsNotFilled}" Value="True">
                                    <Setter Property="Background" Value="Yellow" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridTextColumn.CellStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Width="250" Header="Title" Binding="{Binding Title}" />
                <DataGridTextColumn Width="50" Header="Year" Binding="{Binding Year}" >
                    <DataGridTextColumn.CellStyle>
                        <Style TargetType="DataGridCell">
                            <Setter Property="TextBlock.TextAlignment" Value="Center"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding YearIsNotFilled}" Value="True">
                                    <Setter Property="Background" Value="Yellow" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridTextColumn.CellStyle>
                </DataGridTextColumn>
                <DataGridComboBoxColumn Width="150"  Header="Genre" SelectedItemBinding="{Binding Genre}">
                    <DataGridComboBoxColumn.CellStyle>
                        <Style TargetType="{x:Type DataGridCell}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding GenreIsNotFilled}" Value="True">
                                    <Setter Property="Background" Value="Red" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridComboBoxColumn.CellStyle>
                    <DataGridComboBoxColumn.ElementStyle>
                        <Style TargetType="ComboBox">
                            <Setter Property="ItemsSource" Value="{Binding AvailableGenres}" />
                        </Style>
                    </DataGridComboBoxColumn.ElementStyle>
                    <DataGridComboBoxColumn.EditingElementStyle>
                        <Style TargetType="ComboBox">
                            <Setter Property="ItemsSource" Value="{Binding AvailableGenres}" />
                        </Style>
                    </DataGridComboBoxColumn.EditingElementStyle>
                </DataGridComboBoxColumn>
                <DataGridComboBoxColumn Width="300" Header="Destination URI" SelectedItemBinding="{Binding DestinationUri}">
                    <DataGridComboBoxColumn.CellStyle>
                        <Style TargetType="{x:Type DataGridCell}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding DestinationUriIsNotFilled}" Value="True">
                                    <Setter Property="Background" Value="Red" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridComboBoxColumn.CellStyle>
                    <DataGridComboBoxColumn.ElementStyle>
                        <Style TargetType="ComboBox">
                            <Setter Property="ItemsSource" Value="{Binding AvailableDestinationUris}" />
                        </Style>
                    </DataGridComboBoxColumn.ElementStyle>
                    <DataGridComboBoxColumn.EditingElementStyle>
                        <Style TargetType="ComboBox">
                            <Setter Property="IsEnabled" Value="{Binding DestinationUriIsEditable}" />
                            <Setter Property="ItemsSource" Value="{Binding AvailableDestinationUris}" />
                        </Style>
                    </DataGridComboBoxColumn.EditingElementStyle>
                </DataGridComboBoxColumn>
            </DataGrid.Columns>
        </DataGrid>
        <Button x:Name="ButtonOk" Content="OK" Margin="10,350,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Width="75"
                IsEnabled="{Binding RequiredDataIsFilled}" IsDefault="True" Click="ButtonOk_Click"/>
        <Button x:Name="ButtonCancel" Content="Cancel" Margin="100,350,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Width="75"
                Click="ButtonCancel_Click"/>
    </Grid>
</Window>
