<UserControl x:Class="MusicLibrary.PandaPlayer.Views.SongListTabControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:MusicLibrary.PandaPlayer.Views"
             mc:Ignorable="d" 
             d:DesignWidth="800" d:DesignHeight="450">

    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"></BooleanToVisibilityConverter>
    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="2"/>
            <RowDefinition Height="30"/>
        </Grid.RowDefinitions>
        <!-- We wrap each SongListView with Grid, because otherwise setting visibility does not work -->
        <Grid Grid.Row="0"  Visibility="{Binding AreExplorerSongsSelected, Converter={StaticResource BooleanToVisibilityConverter}}">
            <local:DiscSongListView DataContext="{Binding ExplorerSongsViewModel}" />
        </Grid>
        <Grid Grid.Row="0" Visibility="{Binding ArePlaylistSongsSelected, Converter={StaticResource BooleanToVisibilityConverter}}">
            <local:PlaylistView DataContext="{Binding PlaylistSongsViewModel}" />
        </Grid>
        <GridSplitter Grid.Row="1" ResizeDirection="Rows" HorizontalAlignment="Stretch" />
        <Grid Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="2"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="2"/>
            </Grid.ColumnDefinitions>
            <Button Grid.Column="0" Content="Content" Command="{Binding SwitchToExplorerSongsCommand}">
                <Button.Style>
                    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MaterialDesignFlatButton}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding AreExplorerSongsSelected}" Value="True">
                                <Setter Property="Foreground" Value="{DynamicResource PrimaryHueDarkForegroundBrush}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <GridSplitter Grid.Column="1" ResizeDirection="Columns" HorizontalAlignment="Stretch" />
            <Button Grid.Column="2" Content="Playlist" Command="{Binding SwitchToPlaylistSongsCommand}">
                <Button.Style>
                    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MaterialDesignFlatButton}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ArePlaylistSongsSelected}" Value="True">
                                <Setter Property="Foreground" Value="{DynamicResource PrimaryHueDarkForegroundBrush}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <GridSplitter Grid.Column="3" ResizeDirection="Columns" HorizontalAlignment="Stretch" />
        </Grid>
    </Grid>
</UserControl>
