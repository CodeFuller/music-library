<UserControl x:Class="MusicLibrary.DiscAdder.Views.EditDiscsDetailsView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d"
        d:DesignWidth="800" d:DesignHeight="400">

    <DataGrid AutoGenerateColumns="False" ItemsSource="{Binding Discs}" CellStyle="{StaticResource MaterialDesignDataGridCell}" BorderThickness="2" BorderBrush="{DynamicResource MaterialDesignDivider}"
              GridLinesVisibility="All" VerticalGridLinesBrush="{DynamicResource MaterialDesignDivider}" HorizontalGridLinesBrush="{DynamicResource MaterialDesignDivider}">
        <DataGrid.ColumnHeaderStyle>
            <Style TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}">
                <Setter Property="BorderBrush" Value="{DynamicResource MaterialDesignDivider}"/>
                <Setter Property="BorderThickness" Value="0,0,1,0"/>
            </Style>
        </DataGrid.ColumnHeaderStyle>
        <DataGrid.Columns>
            <DataGridTextColumn Header="Destination Folder" Width="*" IsReadOnly="True" Binding="{Binding DestinationFolder}">
                <DataGridTextColumn.CellStyle>
                    <Style TargetType="DataGridCell">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding FolderIsNew}" Value="True">
                                <Setter Property="Background" Value="Yellow" />
                                <Setter Property="Foreground" Value="{DynamicResource MaterialDesignPaper}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </DataGridTextColumn.CellStyle>
            </DataGridTextColumn>
            <DataGridTextColumn Header="Type" IsReadOnly="True" Binding="{Binding DiscTypeTitle}">
                <DataGridTextColumn.CellStyle>
                    <Style TargetType="DataGridCell">
                        <Setter Property="TextBlock.TextAlignment" Value="Center"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding WarnAboutDiscType}" Value="True">
                                <Setter Property="Background" Value="Yellow" />
                                <Setter Property="Foreground" Value="{DynamicResource MaterialDesignPaper}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </DataGridTextColumn.CellStyle>
            </DataGridTextColumn>
            <DataGridComboBoxColumn Header="Artist" Width="*" SelectedItemBinding="{Binding Artist}">
                <DataGridComboBoxColumn.CellStyle>
                    <Style TargetType="DataGridCell">
                        <Setter Property="IsEnabled" Value="{Binding ArtistIsEditable}" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ArtistIsNotFilled}" Value="True">
                                <Setter Property="Background" Value="Yellow" />
                                <Setter Property="Foreground" Value="{DynamicResource MaterialDesignPaper}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ArtistIsNew}" Value="True">
                                <Setter Property="Background" Value="Yellow" />
                                <Setter Property="Foreground" Value="{DynamicResource MaterialDesignPaper}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </DataGridComboBoxColumn.CellStyle>
                <DataGridComboBoxColumn.ElementStyle>
                    <Style TargetType="ComboBox">
                        <Setter Property="ItemsSource" Value="{Binding AvailableArtists}" />
                    </Style>
                </DataGridComboBoxColumn.ElementStyle>
                <DataGridComboBoxColumn.EditingElementStyle>
                    <Style TargetType="ComboBox">
                        <Setter Property="ItemsSource" Value="{Binding AvailableArtists}" />
                    </Style>
                </DataGridComboBoxColumn.EditingElementStyle>
            </DataGridComboBoxColumn>
            <DataGridTextColumn Header="Disc Title" Width="*" IsReadOnly="True" Binding="{Binding DiscTitle}" />
            <DataGridTextColumn Header="Tree Title" Width="*" IsReadOnly="True" Binding="{Binding TreeTitle}" />
            <DataGridTextColumn Header="Album Title" Width="*" Binding="{Binding AlbumTitle}">
                <DataGridTextColumn.CellStyle>
                    <Style TargetType="DataGridCell">
                        <Setter Property="IsEnabled" Value="{Binding AlbumTitleIsEditable}" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding WarnAboutUnequalAlbumTitle}" Value="True">
                                <Setter Property="Background" Value="Yellow" />
                                <Setter Property="Foreground" Value="{DynamicResource MaterialDesignPaper}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </DataGridTextColumn.CellStyle>
            </DataGridTextColumn>
            <DataGridTextColumn Header="Year" Binding="{Binding Year}" >
                <DataGridTextColumn.CellStyle>
                    <Style TargetType="DataGridCell">
                        <Setter Property="TextBlock.TextAlignment" Value="Center"/>
                        <Setter Property="IsEnabled" Value="{Binding YearIsEditable}" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding WarnAboutNotFilledYear}" Value="True">
                                <Setter Property="Background" Value="Yellow" />
                                <Setter Property="Foreground" Value="{DynamicResource MaterialDesignPaper}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </DataGridTextColumn.CellStyle>
            </DataGridTextColumn>
            <DataGridComboBoxColumn Header="Genre" MinWidth="150" SelectedItemBinding="{Binding Genre}">
                <DataGridComboBoxColumn.CellStyle>
                    <Style TargetType="{x:Type DataGridCell}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding GenreIsNotFilled}" Value="True">
                                <Setter Property="Background" Value="Red" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </DataGridComboBoxColumn.CellStyle>
                <DataGridComboBoxColumn.ElementStyle>
                    <Style TargetType="ComboBox">
                        <Setter Property="ItemsSource" Value="{Binding AvailableGenres}" />
                    </Style>
                </DataGridComboBoxColumn.ElementStyle>
                <DataGridComboBoxColumn.EditingElementStyle>
                    <Style TargetType="ComboBox">
                        <Setter Property="ItemsSource" Value="{Binding AvailableGenres}" />
                    </Style>
                </DataGridComboBoxColumn.EditingElementStyle>
            </DataGridComboBoxColumn>
        </DataGrid.Columns>
    </DataGrid>

</UserControl>
